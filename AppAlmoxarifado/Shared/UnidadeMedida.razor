@inject HttpClient _httpClient

@if (UnidadeMedidaViewModels != null)
{
    <input class="form-control form-select-lg mb-3" list="DataListUnidadeMedida" id="DataListUnidade" placeholder="Selecione a unidade de medida " @onchange="@(e => OnUnidadeChanged(e))">
    <datalist id="DataListUnidadeMedida">
        @foreach (var item in UnidadeMedidaViewModels)
        {
            <option value="@item">@item.DESCRICAO</option>
        }
    </datalist>
}

@code {

    private const string uri = "unidadeMedida";
    private string unidade = string.Empty;
    public List<UnidadeMedidaViewModel> UnidadeMedidaViewModels = new List<UnidadeMedidaViewModel>();

    protected override async Task OnInitializedAsync()
    {

        var response = await _httpClient.GetFromJsonAsync<IList<UnidadeMedidaViewModel>>(uri);
        if (response != null)
        {
            UnidadeMedidaViewModels.AddRange(response.ToArray());
            StateHasChanged();
        }
        else
        {
            UnidadeMedidaViewModels.Clear();
        }
    }

    [Parameter]
    public string? Unidade { get; set; }

    [Parameter]
    public EventCallback<string> UnidadeChanged { get; set; }

    public async Task OnUnidadeChanged(ChangeEventArgs e)
    {
        var unidadeMedidaViewModels = e?.Value;
        Unidade = e?.Value?.ToString();
        await UnidadeChanged.InvokeAsync(Unidade);
    }

}