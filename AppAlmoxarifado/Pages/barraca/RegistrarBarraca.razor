@page "/barraca"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Cadastro de Barracas</h3>

<EditForm Model="@BarracaDto" OnValidSubmit="@SalvarAsync">
    <div class="mb-3">
        <label for="@nameof(BarracaDto.Nome)" class="form-label">Nome da Barrca</label>
        <InputText class="form-control" id="@nameof(BarracaDto.Nome)" @bind-Value="BarracaDto.Nome" />
    </div>
    <div class="mb-3">
        <label for="@nameof(BarracaDto.Descricao)" class="form-label">Descrição</label>
        <InputTextArea class="form-control" rows="3" id="@nameof(BarracaDto.Descricao)" @bind-Value="BarracaDto.Descricao" />
    </div>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="d-grid gap-2 d-md-block">
        <button type="submit" class="btn btn-primary">Salvar</button>
        <button type="button" class="btn btn-primary" @onclick="@Clear">Limpar</button>
        <button type="button" class="btn btn-primary" @onclick="@Listar">Listar</button>
    </div>
</EditForm>
<br />
<br />
@if (!string.IsNullOrWhiteSpace(MessageErro))
{
    <div class="border-1 alert-warning">
        <p>@MessageErro</p>
    </div>
}

@code {

    private string MessageErro { get; set; }
    private BarracaCreateDto BarracaDto { get; set; }

    protected override void OnInitialized()
    {
        BarracaDto = new();
    }

    private void Clear()
    {
        BarracaDto = new();
    }

    private void Listar()
    {
        NavigationManager.NavigateTo("barracas");
    }

    private async Task SalvarAsync()
    {
        var response = await HttpClient.PostAsJsonAsync<BarracaCreateDto>("barraca", BarracaDto);
        if (response.IsSuccessStatusCode)
        {
            Listar();
        }
    }
}
