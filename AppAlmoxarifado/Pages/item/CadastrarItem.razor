@page "/item"
@inject HttpClient _httpClient
@inject NavigationManager _navigationManager

<div class="row alert alert-info mb-3" role="alert">
    <h1 class="h4">Cadastrar Item</h1>
</div>

<div class="d-grid gap-1 d-md-block mb-3">
    <button type="button" class="btn btn-primary" @onclick="@BtnListar">
        <span class="oi oi-list"></span> LISTAR
    </button>
</div>

<div class="row">
    <EditForm Model="@dtoCreate" OnValidSubmit="@BtnAdicionar">
        <div class="mb-3">
            <label for="@nameof(dtoCreate.Codigo)" class="form-label">Código</label>
            <InputText class="form-control" id="@nameof(dtoCreate.Codigo)" @bind-Value="dtoCreate.Codigo" />
        </div>
        <div class="mb-3">
            <label for="@nameof(dtoCreate.Descricao)" class="form-label">Descricão</label>
            <InputTextArea class="form-control" rows="3" id="@nameof(dtoCreate.Descricao)" @bind-Value="dtoCreate.Descricao" />
        </div>
        <div class="mb-3">
            <label for="@nameof(dtoCreate.Tipo)" class="form-label">Tipo</label>
            <InputText class="form-control" id="@nameof(dtoCreate.Tipo)" @bind-Value="dtoCreate.Tipo" />
        </div>
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="d-grid gap-2 d-md-block mb-3">
            <button type="submit" class="btn btn-success mb-3">
                <span class="oi oi-circle-check"></span>
            </button>
            <button type="button" class="btn btn-danger mb-3" @onclick="@BtnClear">
                <span class="oi oi-ban"></span>
            </button>
        </div>
    </EditForm>
</div>

<LoggerErroComponent MessageErro="@MessageErro" />

@if (dtosCreate.Any())
{
    <div class="alert alert-info d-flex align-items-center mb-3" role="alert">
        <div>
            <span class="oi oi-comment-square" /> Atenção: Click em Salvar, para concluir a operação!
        </div>
    </div>
    <table class="table table-hover table-responsive mb-3">
        <thead class="table-secondary">
            <tr>
                <th>Código</th>
                <th>Descrição</th>
                <th>Tipo</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dto in dtosCreate)
            {
                <tr>
                    <td>@dto.Codigo</td>
                    <td>@dto.Descricao</td>
                    <td>@dto.Tipo</td>
                    <td>
                        <button type="button" class="btn btn-primary" @onclick="@(e => BtnEditar(dto))">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button type="button" class="btn btn-danger" @onclick="@(e => BtnRemove(dto))">
                            <span class="oi oi-circle-x"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-grid gap-2 d-md-block mb-3">
        <button type="button" class="btn btn-danger" @onclick="@BtnClearAll">
            <span class="oi oi-ban"></span> LIMPAR
        </button>
        <button type="button" class="btn btn-success" @onclick="@BtnSalvarAsync">
            <span class="oi oi-circle-check"></span> SALVAR
        </button>
    </div>
}


@code {

    private string MessageErro { get; set; } = string.Empty;

    private ItemDtoCreate dtoCreate { get; set; } = new();
    private List<ItemDtoCreate> dtosCreate { get; set; } = new();
      
    private void BtnAdicionar()
    {
        if (!dtosCreate.Contains(dtoCreate))
            dtosCreate.Add(dtoCreate);
        BtnClear();
        StateHasChanged();
    }

    private void BtnListar()
    {
        _navigationManager.NavigateTo("itens");
    }

    private void BtnEditar(ItemDtoCreate dto)
    {
        dtoCreate = dto;
    }

    private void BtnRemove(ItemDtoCreate dto)
    {
        dtosCreate.Remove(dto);
    }

    private void BtnClear()
    {
        dtoCreate = new();
    }

    private void BtnClearAll()
    {
        BtnClear();
        dtosCreate = new();
    }

    private async Task BtnSalvarAsync()
    {
        var response = await _httpClient.PostAsJsonAsync<IList<ItemDtoCreate>>($"item/list", dtosCreate);
        if (response.IsSuccessStatusCode)
        {
            BtnListar();
        }
        else
        {
            MessageErro = "Erro ao salvar itens.";
        }
        StateHasChanged();
    }

}
